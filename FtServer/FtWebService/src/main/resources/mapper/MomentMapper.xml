<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mn.pp.dao.MomentDao">

    <!-- ============================= INSERT ============================= -->
    <insert id="save">
        INSERT INTO moment( uid,userid,textcontent,createon,isdelete )
        VALUES ( #{uid},#{userid},#{textcontent},#{createon},#{isdelete})
    </insert>


    <!-- batch insert for mysql -->
    <insert id="saveBatch">
        INSERT INTO moment( uid,userid,textcontent,createon,isdelete )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.userid},#{item.textcontent},#{item.createon},#{item.isdelete} )
        </foreach>
    </insert>


    <!-- batch insert for oracle -->
    <!--
    <insert id="saveBatch">
        INSERT INTO moment( uid,userid,textcontent,createon,isdelete )
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            SELECT #{item.uid},#{item.userid},#{item.textcontent},#{item.createon},#{item.isdelete} 
              FROM DUAL 
        </foreach>
    </insert>

    -->

    <!-- ============================= UPDATE ============================= -->
    <update id="update">
        UPDATE moment
        <set>
            uid=#{uid},
            userid=#{userid},
            textcontent=#{textcontent},
            createon=#{createon},
            isdelete=#{isdelete},
        </set>
        WHERE 
    </update>

    <update id="updateIgnoreNull">
        UPDATE moment
        <set>
            <if test="uid!= null">uid=#{uid},</if>
            <if test="userid!= null">userid=#{userid},</if>
            <if test="textcontent!= null">textcontent=#{textcontent},</if>
            <if test="createon!= null">createon=#{createon},</if>
            <if test="isdelete!= null">isdelete=#{isdelete},</if>
        </set>
        WHERE 
    </update>

    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index"  separator=";">
            UPDATE moment
            <set>
                uid=#{item.uid},
                userid=#{item.userid},
                textcontent=#{item.textcontent},
                createon=#{item.createon},
                isdelete=#{item.isdelete},
            </set>
            WHERE 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delete">
        DELETE FROM moment
        WHERE 
    </delete>

    <delete id="deleteBatch">
        DELETE FROM moment
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            
        </foreach>
    </delete>

    <delete id="deleteByPK">
        DELETE FROM moment
        WHERE 
    </delete>

    <delete id="deleteAll">
        DELETE FROM moment
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM moment
    </select>

    <select id="findByPK" resultType="com.mn.pp.pojo.Moment">
        SELECT * FROM Moment
        WHERE uid=#{uid}
    </select>

    <select id="find" resultType="com.mn.pp.pojo.Moment">
        SELECT uid,userid,textcontent,createon,isdelete
         FROM moment
        <where>
            <if test="uid!= null">
               AND uid = #{uid}
            </if>
            <if test="userid!= null">
               AND userid = #{userid}
            </if>
            <if test="textcontent!= null">
               AND textcontent = #{textcontent}
            </if>
            <if test="createon!= null">
               AND createon = #{createon}
            </if>
            <if test="isdelete!= null">
               AND isdelete = #{isdelete}
            </if>
        </where> ORDER BY createon DESC
    </select>
</mapper>
